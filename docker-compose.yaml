version: '3.8'

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER_FILE: /run/secrets/db_user
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
      POSTGRES_DB: mydb
      POSTGRES_SSL_CERT_FILE: /var/lib/postgresql/certs/server.crt
      POSTGRES_SSL_KEY_FILE: /var/lib/postgresql/certs/server.key
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./certs/postgres/server.crt:/var/lib/postgresql/certs/server.crt:ro
      - ./certs/postgres/server.key:/var/lib/postgresql/certs/server.key:ro
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./conf.d/postgres:/etc/postgresql/conf:ro  
    secrets:
      - db_user
      - db_password
    networks:
      - my_encrypted_network
    command: ["postgres", "-c", "config_file=/etc/postgresql/conf/postgresql.conf"]

  app:
    image: ghcr.io/baloo54/backend:latest
    depends_on:
      - db
    environment:
      DB_USER_FILE: /run/secrets/db_user
      DB_PASSWORD_FILE: /run/secrets/db_password
      DB_HOST: db
      DB_NAME: mydb
    secrets:
      - db_user
      - db_password
    volumes:
      - ./certs/postgres:/app
    networks:
      - my_encrypted_network

  nginx:
    image: nginx:alpine
    depends_on:
      - app
    ports:
      - "443:443"
    volumes:
      - .conf.d/nginx:/etc/nginx/conf.d:ro
      - .certs/nginx:/etc/nginx/certs:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
    networks:
      - my_encrypted_network
    

volumes:
  db-data:

secrets:
  db_user:
    external: true
  db_password:
    external: true

networks:
  my_encrypted_network:
    external: true
