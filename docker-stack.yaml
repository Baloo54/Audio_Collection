version: '3.8'

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER_FILE: /run/secrets/db_user
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
      POSTGRES_DB: mydb
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    secrets:
      - db_user
      - db_password
    networks:
      - my_encrypted_network
    tmpfs:
      - /var/lib/postgresql/tmp
    cap_drop:
      - NET_RAW
      - SYS_PTRACE
      - MKNOD
    restart: unless-stopped

  app:
    image: ghcr.io/baloo54/backend:latest
    depends_on:
      - db
    environment:
      DB_USER_FILE: /run/secrets/db_user
      DB_PASSWORD_FILE: /run/secrets/db_password
      DB_HOST: db
      DB_NAME: mydb
    secrets:
      - db_user
      - db_password
      - api_key
    networks:
      - my_encrypted_network
    restart: unless-stopped
    volumes:
      - app-data:/tmp/audio_uploads
      

  nginx:
    image : ghcr.io/baloo54/frontend:latest
    depends_on:
      - app
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    volumes:
      - ./nginx/certs/selfsigned:/etc/nginx/certs/selfsigned:ro
      - ./nginx/html:/usr/share/nginx/html:ro
    networks:
      - my_encrypted_network
    restart: unless-stopped

volumes:
  db-data:
  app-data:

secrets:
  db_user:
    external: true
  db_password:
    external: true
  api_key:
    external: true

networks:
  my_encrypted_network:
    external: true
